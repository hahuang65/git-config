#!/usr/bin/env bash

source $HOME/.dotfiles/scripts/shared/srht_scripts/common
source $HOME/.dotfiles/scripts/shared/common

license=""
license_src=""
copyright_name="Howard Huang"
year=$(date +"%Y")
year_field=""
copyright_owners_field=""
forge="git.sr.ht"

usage() {
  echo -n "$(basename "$0" | tr -s '-' ' ') <repo> -l <license>

A script to add a license to a Sourcehut repository, or local git repository.
If a git.sr.ht ~username/repo string is passed in, it will create a commit with the
license, and push it back up.

If none is given, it will use the current working directory and commit a license, but
will not push anything to a remote, in case there is work un-related to the license that
should NOT be pushed.

  Options:
    -f, --forge     The forge to use. Defaults to 'git.sr.ht'. Must be satisfy the 'git@<forge>/<repo>' address
    -l, --license   The type of license to assign. Options are GPLv3, LGPLv3, AGPLv3, MIT, BSD, Apache2
                    See https://man.sr.ht/license.md for more information
    -n, --name      The name(s) of the copyright holders. Defaults to $name
    -h, --help      Display this help and exit

  Parameters:
    repo            Name of the repository to set a license for. This MUST be a git.sr.ht ~username/repo string
                    If no name is passed, it will simply commit the LICENSE to the current working directory, but not push anything
"
}

while :; do
  flag=${1:-}
  arg=${2:-}

  case "$flag" in
    -h|-\?|--help)
      usage
      exit
      ;;
    -f|--forge)
      forge="${arg}"
      shift
      ;;
    -l|--license)
      license="${arg}"
      shift
      ;;
    -n|--name)
      copyright_name="${arg}"
      shift
      ;;
    --) # Demarcates end of all options.
      shift
      break
      ;;
    -?*) # Handle any unknown options.
      printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
      ;;
    *) # End of all options if nothing matches
      break
  esac

  shift
done

commit_license() {
  curl --silent $1 >| LICENSE

  if [ ! -z "$year_field" ]
  then
    # perl cuz BSD sed is non-conforming
    perl -i -pe"s/$year_field/$year/" LICENSE
  fi

  if [ ! -z "$copyright_owners_field" ]
  then
    # perl cuz BSD sed is non-conforming
    perl -i -pe"s/$copyright_owners_field/$copyright_name/" LICENSE
  fi

  git add LICENSE
  echo ""
  git commit -m "Add/Update LICENSE" -- LICENSE
  echo ""
}

main() {
  if [ -z "$license" ]
  then
    error "No license specified."
  fi

  case "${license,,}" in
  gplv3)
    license_src="https://www.gnu.org/licenses/gpl-3.0.txt"
    printf "GPLv3 selected. Full license @ "
    ;;
  lgplv3)
    license_src="https://www.gnu.org/licenses/lgpl-3.0.txt"
    printf "LGPLv3 selected. Full license @ "
    ;;
  mit)
    license_src="https://spdx.org/licenses/MIT.txt"
    year_field="<year>"
    copyright_owners_field="<copyright holders>"
    printf "MIT selected. Full license @ "
    ;;
  apache2)
    license_src="https://www.apache.org/licenses/LICENSE-2.0.txt"
    printf "Apache 2.0 selected. Full license @ "
    ;;
  *)
    error "'$license' is not a valid choice."
    ;;
  esac
  
  printf "$license_src\n\n"

  repo=""
  if [ "$#" -ne 1 ]; then
    repo=${PWD##*/}
    commit_license $license_src
  else
    repo=${1}
    tmp_path="/tmp/${repo//\//-}"
    git clone "git@$forge:$repo" "$tmp_path"
    pushd "$tmp_path" > /dev/null
    commit_license $license_src
    git push
    popd > /dev/null
    rm -rf "$tmp_path"
  fi
}

main "$@"
